{"version":3,"file":"component---src-templates-tags-js-305be508c8251a732f09.js","mappings":"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","sources":["webpack://museologi.st/./node_modules/react-bootstrap/esm/CardTitle.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardBody.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardFooter.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardLink.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardSubtitle.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/Card.js","webpack://museologi.st/./src/components/structure/post-card.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardText.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardImgOverlay.js","webpack://museologi.st/./src/templates/tags.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardImg.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from \"react\";\nimport { Card, Col, Badge } from \"react-bootstrap\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst PostCard = ({ post }) => {\n    const { frontmatter } = post;\n    const { featuredImg, title, slug, date, institution } = frontmatter;\n    const image = getImage(featuredImg);\n\n    return (\n        <Col md={4} className=\"mb-3\">\n            <Card className=\"border-0 bg-light\">\n                {image && (\n                    <GatsbyImage\n                        className=\"card-img-top rounded-3\"\n                        image={image}\n                        alt={title}\n                    />\n                )}\n                <Card.Body className=\"bg-white border-0 rounded-0\">\n                    <Link to={slug} className=\"stretched-link stretched-link__blog_post\">\n                        <h1 className=\"lead text-black fw-bold\">{title}</h1>\n                    </Link>\n                    {date && <h4 className=\"text-info\">{date}</h4>}\n                    {institution && (\n                        <Badge bg=\"dark\" className=\"text-white p-2\">\n                            {institution}\n                        </Badge>\n                    )}\n                </Card.Body>\n            </Card>\n        </Col>\n    );\n};\n\nexport default PostCard;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className =>\n/*#__PURE__*/\n// eslint-disable-next-line react/display-name\nReact.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layouts/layout\";\n// Components\nimport {Link, graphql} from \"gatsby\"\nimport PostCard from \"../components/structure/post-card\";\nimport {Container, Row, Col} from \"react-bootstrap\";\n// Utilities\nimport {startCase} from \"lodash\"\nimport Seo from \"../components/structure/SEO\";\nimport HeaderWithBreadcrumbs from \"../components/structure/headerWithBreadcrumbs\";\n\nconst Tags = React.memo(({pageContext, data}) => {\n    const {tag} = pageContext\n    const {edges, totalCount} = data.allMarkdownRemark\n    const breadcrumb = pageContext?.breadcrumb\n    // Ensure tag is always a string\n    // Memoize the tag header to avoid recalculation\n    const tagHeader = React.useMemo(() => \n        `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${startCase(tag)}\"`,\n        [totalCount, tag]\n    );\n\n    // Memoize the posts to prevent unnecessary re-renders\n    const posts = React.useMemo(() => \n        edges.map(({node}) => <PostCard key={node.id} post={node}/>),\n        [edges]\n    );\n\n    return (\n        <Layout>\n            <HeaderWithBreadcrumbs\n                    breadcrumbs={breadcrumb?.crumbs || []}\n                    title={tagHeader}\n                    date={null}\n                />\n            <Container>\n                <Row>\n                    {posts}\n                </Row>\n                <Row>\n                    <Col md={4}>\n                        <Link className=\"my-3 btn-dark btn text-white\" to=\"/tags\">\n                            All tags\n                        </Link>\n                    </Col>\n                </Row>\n            </Container>\n        </Layout>\n    )\n});\n\n// Add display name for debugging\nTags.displayName = 'Tags';\n\nTags.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired,\n    }).isRequired,\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(\n                PropTypes.shape({\n                    node: PropTypes.shape({\n                        id: PropTypes.string.isRequired,\n                        frontmatter: PropTypes.shape({\n                            title: PropTypes.string.isRequired,\n                            slug: PropTypes.string.isRequired,\n                            featuredImg: PropTypes.object,\n                        }).isRequired,\n                    }).isRequired,\n                }).isRequired\n            ).isRequired,\n        }).isRequired,\n    }).isRequired,\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n    query($tag: String) {\n        allMarkdownRemark(\n            limit: 2000\n            sort: {frontmatter: {date: DESC}}\n            filter: { frontmatter: { tags: { in: [$tag] } } }\n        ) {\n            totalCount\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        slug\n                        date(formatString: \"MMMM DD, YYYY\")\n                        featuredImg {\n                            childImageSharp {\n                                id\n                                gatsbyImageData(\n                                    placeholder: DOMINANT_COLOR\n                                    height: 600\n                                    formats: [AUTO, WEBP]\n                                    width: 600\n                                    quality: 80\n                                    transformOptions: {\n                                        grayscale: false\n                                        fit: COVER\n                                        cropFocus: CENTER\n                                    }\n                                )\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const Head = ({pageContext}) => (\n    <Seo \n        title={`Pages tagged with \"${startCase(pageContext.tag)}\"`}\n        description={`Browse all content tagged with ${startCase(pageContext.tag)}`}\n    />\n)","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;"],"names":["DivStyledAsH5","CardTitle","className","bsPrefix","as","Component","props","ref","displayName","CardBody","CardFooter","context","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardLink","DivStyledAsH6","CardSubtitle","Card","bg","text","border","body","Object","assign","Img","CardImg","Title","Subtitle","Body","Link","Text","CardText","Header","Footer","ImgOverlay","CardImgOverlay","_ref","post","frontmatter","featuredImg","title","slug","date","institution","image","getImage","React","Col","md","GatsbyImage","alt","to","Badge","p","Tags","pageContext","data","tag","edges","totalCount","allMarkdownRemark","breadcrumb","tagHeader","_startCase","posts","map","_ref2","node","PostCard","key","id","Layout","HeaderWithBreadcrumbs","breadcrumbs","crumbs","Container","Row","Head","_ref3","Seo","description","variant"],"sourceRoot":""}