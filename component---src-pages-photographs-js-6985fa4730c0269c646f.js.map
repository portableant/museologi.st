{"version":3,"file":"component---src-pages-photographs-js-6985fa4730c0269c646f.js","mappings":"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","sources":["webpack://museologi.st/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardImg.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/Card.js","webpack://museologi.st/./src/components/structure/post-card.js","webpack://museologi.st/./src/pages/photographs.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/Badge.js","webpack://museologi.st/./node_modules/dom-helpers/esm/camelize.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from \"react\"\nimport {Card, CardImg, Col, Badge} from 'react-bootstrap';\nimport {Link} from \"gatsby\"\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\n\nconst PostCard = ({post}) => (\n    <Col md={4} className=\"mb-3 aos-init aos-animate\" data-aos-duration=\"500\" data-aos=\"fade-up-right\"  data-aos-easing=\"linear\" data-aos-delay=\"0\">\n        <Card className=\"border-0 bg-light\">\n            <CardImg className=\"card-img-top rounded-0\"\n                     as={GatsbyImage} image={getImage(post.frontmatter.featuredImg)} alt={post.frontmatter.title}/>\n            <Card.Body className=\"bg-white border-0 rounded-0\">\n                <div className=\"h-100\" style={{minHeight: 70}}>\n                    <Link to={post.frontmatter.slug} className=\"stretched-link stretched-link__blog_post\">\n                        <h1 className=\"lead text-black fw-bold\">{post.frontmatter.title}</h1>\n                    </Link>\n                </div>\n                {post.frontmatter.institution && <div className=\"h-100\">\n                    <Badge bg=\"primary\" className=\"text-white p-2\">{post.frontmatter.institution}</Badge>\n                </div>}\n            </Card.Body>\n        </Card>\n    </Col>\n)\n\nexport default PostCard","import * as React from \"react\"\nimport Layout from \"../components/layouts/layout\"\nimport PostCard from \"../components/structure/post-card\";\nimport {graphql} from \"gatsby\"\nimport {Row, Container} from 'react-bootstrap';\nimport Seo from \"../components/structure/SEO\"\n\nconst PhotographsPage = ({data: {allMarkdownRemark: {edges},},}) => {\n    const Posts = edges\n        .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n        .map(edge => <PostCard key={edge.node.id} post={edge.node}/>)\n    return (\n        <Layout>\n\n            <Container>\n                <Row>\n                    <h1 className={\"ml-4 mt-4\"}>Photographs</h1>\n                    <Row>\n                        {Posts}\n                    </Row>\n                </Row>\n            </Container>\n        </Layout>\n    );\n}\nexport default PhotographsPage\n\nexport const pageQuery = graphql`\n    query {\n        allMarkdownRemark(\n            filter: {frontmatter: {section: {eq: \"image\"}}}\n            sort: {frontmatter: {date: DESC}}\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        slug\n                        title\n                        featuredImg {\n                            childImageSharp {\n                                gatsbyImageData(\n                                    placeholder: BLURRED\n                                    height: 600\n                                    formats: [AUTO, WEBP]\n                                    width: 600\n                                    quality: 80\n                                    transformOptions: {grayscale: false, fit: COVER, cropFocus:\n                                    CENTER}\n                                )\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\nexport const Head = () => (\n    <Seo title={\"Random Photographs\"} description={\"A collection of photographs I like\"}/>\n)\n\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"],"names":["className","p","ref","CardImg","bsPrefix","variant","as","Component","props","prefix","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","post","Col","md","GatsbyImage","image","getImage","frontmatter","featuredImg","alt","title","style","minHeight","to","slug","institution","Badge","data","allMarkdownRemark","edges","Posts","filter","edge","node","date","map","key","id","Head","description","pill","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","BsComponent","Tag","resolvedPrefix"],"sourceRoot":""}