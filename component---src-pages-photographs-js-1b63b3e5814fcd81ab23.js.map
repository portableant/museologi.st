{"version":3,"file":"component---src-pages-photographs-js-1b63b3e5814fcd81ab23.js","mappings":"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","sources":["webpack://museologi.st/./node_modules/react-bootstrap/esm/CardTitle.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardBody.js","webpack://museologi.st/./src/pages/photographs.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardFooter.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardLink.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardSubtitle.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/Card.js","webpack://museologi.st/./src/components/structure/post-card.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardText.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardImgOverlay.js","webpack://museologi.st/./src/components/structure/SEO.js","webpack://museologi.st/./src/hooks/use-site-metadata.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/Badge.js","webpack://museologi.st/./src/components/layouts/layout.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardImg.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","import * as React from \"react\"\nimport Layout from \"../components/layouts/layout\"\nimport PostCard from \"../components/structure/post-card\"\nimport { graphql } from \"gatsby\"\nimport { Row, Container } from 'react-bootstrap'\nimport Seo from \"../components/structure/SEO\"\n\nconst PhotographsPage = ({ data: { allMarkdownRemark: { edges } } }) => {\n    // Use useMemo to prevent unnecessary re-computation\n    const posts = React.useMemo(() => \n        edges\n            .filter(edge => edge.node.frontmatter?.date) // More robust null checking\n            .map(edge => (\n                <PostCard \n                    key={edge.node.id} \n                    post={edge.node}\n                />\n            )), [edges]\n    )\n\n    return (\n        <Layout>\n            <Container>\n                <Row>\n                    <div className=\"col-12\">\n                        <h1 className=\"fw-bold text-primary mt-4\">Random Photographs</h1>\n                    </div>\n                </Row>\n                <Row>\n                    {posts}\n                </Row>\n            </Container>\n        </Layout>\n    )\n}\n\nexport default PhotographsPage\n\nexport const pageQuery = graphql`\n    query PhotographsQuery {\n        allMarkdownRemark(\n            filter: { frontmatter: { section: { eq: \"image\" } } }\n            sort: { frontmatter: { date: DESC } }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        slug\n                        title\n                        featuredImg {\n                            childImageSharp {\n                                gatsbyImageData(\n                                    placeholder: BLURRED\n                                    height: 600\n                                    width: 600\n                                    formats: [AUTO, WEBP]\n                                    quality: 80\n                                    transformOptions: { \n                                        grayscale: false\n                                        fit: COVER\n                                        cropFocus: CENTER\n                                    }\n                                )\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const Head = () => (\n    <Seo \n        title=\"Random Photographs\" \n        description=\"A collection of photographs I like\"\n    />\n)","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from \"react\";\nimport { Card, Col, Badge } from \"react-bootstrap\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst PostCard = ({ post }) => {\n    const { frontmatter } = post;\n    const { featuredImg, title, slug, date, institution } = frontmatter;\n    const image = getImage(featuredImg);\n\n    return (\n        <Col md={4} className=\"mb-3\">\n            <Card className=\"border-0 bg-light\">\n                {image && (\n                    <GatsbyImage\n                        className=\"card-img-top rounded-3\"\n                        image={image}\n                        alt={title}\n                    />\n                )}\n                <Card.Body className=\"bg-white border-0 rounded-0\">\n                    <Link to={slug} className=\"stretched-link stretched-link__blog_post\">\n                        <h1 className=\"lead text-black fw-bold\">{title}</h1>\n                    </Link>\n                    {date && <h4 className=\"text-info\">{date}</h4>}\n                    {institution && (\n                        <Badge bg=\"dark\" className=\"text-white p-2\">\n                            {institution}\n                        </Badge>\n                    )}\n                </Card.Body>\n            </Card>\n        </Col>\n    );\n};\n\nexport default PostCard;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className =>\n/*#__PURE__*/\n// eslint-disable-next-line react/display-name\nReact.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","import React from \"react\"\nimport { useSiteMetadata } from \"../../hooks/use-site-metadata\"\n\nfunction createSeoImage(featured, image) {\n    if (featured) {\n        return featured?.childImageSharp.gatsbyImageData.images.fallback.src;\n    }\n    return image;\n}\n\nconst Seo = ({ title, description, pathname, children, featured }) => {\n    const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterHandle } = useSiteMetadata()\n    const featuredImage = createSeoImage(featured,image);\n    const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        image: `${siteUrl}${featuredImage}`,\n        url: `${siteUrl}${pathname || ``}`,\n        twitterHandle,\n    }\n\n    return (\n        <>\n            <title>{seo.title}</title>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            <meta name=\"twitter:title\" content={seo.title} />\n            <meta name=\"twitter:url\" content={seo.url} />\n            <meta name=\"twitter:description\" content={seo.description} />\n            <meta name=\"twitter:image\" content={seo.image} />\n            <meta name=\"twitter:creator\" content={seo.twitterHandle} />\n            <meta property=\"og:url\" content={seo.url.toString()} />\n            <meta property=\"og:title\" content={seo.title} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:site_name\" content=\"Museologi.st\" />\n            <meta property=\"og:description\" content={seo.description} />\n            <meta property=\"og:locale\" content=\"en-gb\" />\n            <meta property=\"og:image\" content={seo.image.toString()} />\n            <meta property=\"og:image:alt\" content=\"An image representing this post\" />\n            <meta property=\"og:image:width\" content=\"600\"/>\n            <meta property=\"og:image:width\" content=\"600\" />\n            <meta property=\"og:image:type\" content=\"image/jpeg\" />\n            {children}\n        </>\n    )\n}\n\nexport default Seo","import { graphql, useStaticQuery } from \"gatsby\"\n\nconst SITE_METADATA_QUERY = graphql`\n  query SiteMetadata {\n    site {\n      siteMetadata {\n        title\n        description\n        twitterHandle\n        image\n        siteUrl\n      }\n    }\n  }\n`\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery(SITE_METADATA_QUERY)\n  return site.siteMetadata\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {useStaticQuery, graphql} from \"gatsby\"\nimport NavBar from \"../structure/nav\";\nimport Footer from \"../structure/footer\"\nimport BackToTop from 'react-back-to-top';\nimport CookieConsent from '../services/cookieconsent';\n\nexport default function Layout({children}) {\n    const data = useStaticQuery(graphql`\n        query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            menuLinks {\n                name\n                link\n                id\n            }\n            aboutLinks {\n                name\n                link\n                id\n            }\n          }\n        }\n      }\n    `)\n        return (\n            <>\n                <NavBar menuLinks={data.site.siteMetadata.menuLinks} siteTitle={data.site.siteMetadata.title}/>\n                <main>\n                    {children}\n                </main>\n                <Footer aboutLinks={data.site.siteMetadata.aboutLinks}/>\n                <BackToTop\n                    mainStyle={{\n                        width: '100%',\n                        height: '100%',\n                        backgroundColor: '#192036',\n                        color: 'white'\n                    }}\n                    percentStyle={{\n                        width: '100%',\n                        height: '100%',\n                        display: 'none'\n                    }}\n                    animate='rotate'\n                    offsetTop={20}\n                    step={50}\n                    percent={false}\n                    visiblePercent={50}\n                />\n                <CookieConsent/>\n            </>\n        )\n\n}\n\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;"],"names":["DivStyledAsH5","CardTitle","className","bsPrefix","as","Component","props","ref","displayName","CardBody","_ref","data","allMarkdownRemark","edges","posts","React","filter","edge","_edge$node$frontmatte","node","frontmatter","date","map","PostCard","key","id","post","Layout","Container","Row","Head","Seo","title","description","CardFooter","context","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardLink","DivStyledAsH6","CardSubtitle","Card","bg","text","border","body","Object","assign","Img","CardImg","Title","Subtitle","Body","Link","Text","CardText","Header","Footer","ImgOverlay","CardImgOverlay","featuredImg","slug","institution","image","getImage","Col","md","GatsbyImage","alt","to","Badge","p","pathname","featured","defaultTitle","defaultDescription","siteUrl","twitterHandle","useSiteMetadata","site","useStaticQuery","siteMetadata","featuredImage","childImageSharp","gatsbyImageData","images","fallback","src","createSeoImage","seo","url","name","content","property","toString","pill","NavBar","menuLinks","siteTitle","aboutLinks","BackToTop","mainStyle","width","height","backgroundColor","color","percentStyle","display","animate","offsetTop","step","percent","visiblePercent","CookieConsent","variant"],"sourceRoot":""}