{"version":3,"file":"component---src-pages-tags-js-fc64c1ccc1635f0b24ab.js","mappings":"oGAAA,IAuBIA,EAvBmB,EAAQ,KAuBfC,EAAiB,SAASC,EAAQC,EAAMC,GACtD,OAAOF,GAAUE,EAAQ,IAAM,IAAMD,EAAKE,aAC5C,IAEAC,EAAOC,QAAUP,C,kLC0BjB,UA7CiBQ,IAAe,IAAd,KAAEC,GAAMD,EACxB,MAAM,MAAEE,GAAUD,EAAKE,kBAEvB,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAS,KACRF,EAAAA,cAACG,EAAAA,EAAG,CAACC,UAAU,aACbJ,EAAAA,cAAA,MAAII,UAAU,aAAY,QAC1BJ,EAAAA,cAAA,MAAII,UAAU,wBACXN,EAAMO,KAAIC,GACTN,EAAAA,cAAA,MACEO,IAAKD,EAAIE,WACTJ,UAAU,uFAEVJ,EAAAA,cAACS,EAAAA,KAAI,CAACC,GAAI,SAASC,IAAUL,EAAIE,gBAC9BI,IAAUN,EAAIE,aAEjBR,EAAAA,cAAA,QAAMI,UAAU,iBAAiBE,EAAIO,kBAMxC,EAwBN,MAgBMC,EAAOA,IAClBd,EAAAA,cAACe,EAAAA,EAAG,CACFC,MAAM,qCACNC,YAAY,0D","sources":["webpack://museologi.st/./node_modules/lodash/kebabCase.js","webpack://museologi.st/./src/pages/tags.js"],"sourcesContent":["var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\nimport { kebabCase, startCase } from \"lodash\"\nimport Layout from \"../components/layouts/layout\"\nimport Seo from \"../components/structure/SEO\"\nimport { Container, Row } from \"react-bootstrap\"\n\nconst TagsPage = ({ data }) => {\n  const { group } = data.allMarkdownRemark\n\n  return (\n    <Layout>\n      <Container>\n        <Row className=\"post-body\">\n          <h1 className=\"ml-4 mt-4\">Tags</h1>\n          <ul className=\"list-group-flush row\">\n            {group.map(tag => (\n              <li \n                key={tag.fieldValue} \n                className=\"list-item col-md-4 border-top py-2 d-flex justify-content-between align-items-start\"\n              >\n                <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                  {startCase(tag.fieldValue)}\n                </Link>\n                <span className=\"badge bg-dark\">{tag.totalCount}</span>\n              </li>\n            ))}\n          </ul>\n        </Row>\n      </Container>\n    </Layout>\n  )\n}\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ).isRequired,\n    }).isRequired,\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query TagsPageQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport const Head = () => (\n  <Seo \n    title=\"An index of tags used on this site\" \n    description=\"An indexed view of tags used on this site, with counts\"\n  />\n)"],"names":["kebabCase","createCompounder","result","word","index","toLowerCase","module","exports","_ref","data","group","allMarkdownRemark","React","Layout","Container","Row","className","map","tag","key","fieldValue","Link","to","_kebabCase","_startCase","totalCount","Head","Seo","title","description"],"sourceRoot":""}