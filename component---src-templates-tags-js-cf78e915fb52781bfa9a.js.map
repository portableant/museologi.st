{"version":3,"file":"component---src-templates-tags-js-cf78e915fb52781bfa9a.js","mappings":"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","sources":["webpack://museologi.st/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardImg.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/Card.js","webpack://museologi.st/./src/components/structure/post-card.js","webpack://museologi.st/./src/templates/tags.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/Badge.js","webpack://museologi.st/./node_modules/dom-helpers/esm/camelize.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from \"react\"\nimport {Card, CardImg, Col, Badge} from 'react-bootstrap';\nimport {Link} from \"gatsby\"\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\n\nconst PostCard = ({post}) => (\n    <Col md={4} className=\"mb-3\">\n        <Card className=\"border-0 bg-light\">\n            <CardImg className=\"card-img-top rounded-0\"\n                     as={GatsbyImage} image={getImage(post.frontmatter.featuredImg)} alt={post.frontmatter.title}/>\n            <Card.Body className=\"bg-white border-0 rounded-0\">\n                <div >\n                    <Link to={post.frontmatter.slug} className=\"stretched-link stretched-link__blog_post\">\n                        <h1 className=\"lead text-black fw-bold\">{post.frontmatter.title}</h1>\n                    </Link>\n                </div>\n                {post.frontmatter.date && <div>\n                    <h4 className=\"text-info\">{post.frontmatter.date}</h4>\n                </div>}\n                {post.frontmatter.institution && <div className=\"h-100\">\n                    <Badge bg=\"dark\" className=\"text-white p-2\">{post.frontmatter.institution}</Badge>\n                </div>}\n            </Card.Body>\n        </Card>\n    </Col>\n)\n\nexport default PostCard","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layouts/layout\";\n// Components\nimport {Link, graphql} from \"gatsby\"\nimport PostCard from \"../components/structure/post-card\";\nimport {Container, Row, Col} from \"react-bootstrap\";\n// Utilities\nimport {startCase} from \"lodash\"\nimport Seo from \"../components/structure/SEO\";\n\nconst Tags = ({pageContext, data}) => {\n    const {tag} = pageContext\n    const {edges, totalCount} = data.allMarkdownRemark\n    const tagHeader = `${totalCount} post${\n        totalCount === 1 ? \"\" : \"s\"\n    } tagged with \"${startCase(tag)}\"`\n\n    return (\n        <Layout>\n            <Container>\n                <Row>\n                <h1 className=\"ml-4 mt-4\">{tagHeader}</h1>\n                <Row>\n                    {edges.map(({node}) => {\n                        return (\n                            <PostCard key={node.id} post={node}/>\n                        )\n                    })}\n                </Row>\n                    <Col md={4}>\n                        <Link className=\"my-3 btn-dark btn text-white\" to=\"/tags\">All tags</Link>\n                    </Col>\n                </Row>\n            </Container>\n        </Layout>\n    )\n\n}\n\nTags.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired,\n    }),\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(\n                PropTypes.shape({\n                    node: PropTypes.shape({\n                        frontmatter: PropTypes.shape({\n                            title: PropTypes.string.isRequired,\n                            slug: PropTypes.string.isRequired,\n\n                        }),\n                    }),\n                }).isRequired\n            ),\n        }),\n    }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n          totalCount\n    edges {\n      node {\n        frontmatter {\n          title\n          slug\n          featuredImg {\n            childImageSharp {\n              id\n              gatsbyImageData(\n                placeholder: BLURRED\n                height: 600\n                formats: [AUTO, WEBP]\n                width: 600\n                quality: 80\n                transformOptions: {grayscale: false, fit: COVER, cropFocus: CENTER}\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\nexport function Head({pageContext}) {\n    return (\n        <Seo title={\"Pages tagged with \" + pageContext.tag} />\n    )\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const componentProps = {\n      ...defaultProps,\n      ...props\n    };\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...componentProps\n    });\n  });\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"],"names":["className","p","ref","CardImg","bsPrefix","variant","as","Component","props","prefix","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","_ref","post","React","Col","md","GatsbyImage","image","getImage","frontmatter","featuredImg","alt","title","to","slug","date","institution","Badge","pageContext","data","tag","edges","totalCount","allMarkdownRemark","tagHeader","_startCase","Layout","Container","Row","map","_ref2","node","PostCard","key","id","Head","_ref3","Seo","pill","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","defaultProps","BsComponent","Tag","componentProps","resolvedPrefix"],"sourceRoot":""}