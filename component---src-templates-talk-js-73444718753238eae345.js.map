{"version":3,"file":"component---src-templates-talk-js-73444718753238eae345.js","mappings":"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","sources":["webpack://museologi.st/./src/templates/talk.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardTitle.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardBody.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardFooter.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardLink.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardSubtitle.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/Card.js","webpack://museologi.st/./src/components/structure/pagination.js","webpack://museologi.st/./src/components/structure/post-card.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardText.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardImgOverlay.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/Button.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardImg.js"],"sourcesContent":["import * as React from \"react\"\nimport Layout from \"../components/layouts/layout\"\nimport PostCard from \"../components/structure/post-card\";\nimport {graphql} from \"gatsby\"\nimport {Container, Row, Col} from 'react-bootstrap';\nimport Pagination from '../components/structure/pagination';\nimport Seo from \"../components/structure/SEO\";\nimport HeaderWithBreadcrumbs from \"../components/structure/headerWithBreadcrumbs\";\n\nconst TalkPage = React.memo(({data, pageContext}) => {\n    // Memoize the posts array to prevent unnecessary re-renders\n    const Posts = React.useMemo(() => \n        data.allMarkdownRemark.edges\n            .filter(edge => !!edge.node.frontmatter.date)\n            .map(edge => <PostCard key={edge.node.id} post={edge.node}/>),\n        [data.allMarkdownRemark.edges]\n    );\n    const { breadcrumb } = pageContext\n\n    return (\n        <Layout>\n            \n            <HeaderWithBreadcrumbs\n                    breadcrumbs={breadcrumb?.crumbs || []}\n                    title=\"Recent talks\"\n                    date={null}\n                />  \n            <Container>\n                <Row>\n                    <Col xs={12}>\n                        <p>\n                            This page lists talks and presentations I have given at conferences, workshops, and other events.\n                        </p>\n                    </Col>\n                </Row>\n                <Row>\n                    {Posts}\n                </Row>\n            </Container>\n            <Pagination pageContext={pageContext} />\n        </Layout>\n    );\n});\n\n// Add display name for debugging\nTalkPage.displayName = 'TalkPage';\n\nexport default TalkPage\n\nexport const pageQuery = graphql`\n    query($skip: Int!, $limit: Int!) {\n        allMarkdownRemark(\n            filter: {frontmatter: {section: {eq: \"talks\"}}}\n            sort: {frontmatter: {date: DESC}}\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        slug\n                        title\n                        featuredImg {\n                            childImageSharp {\n                                id\n                                gatsbyImageData(\n                                    placeholder: DOMINANT_COLOR\n                                    height: 600\n                                    formats: [AUTO, WEBP]\n                                    width: 600\n                                    quality: 80\n                                    transformOptions: {\n                                        grayscale: false\n                                        fit: COVER\n                                        cropFocus: CENTER\n                                    }\n                                )\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const Head = ({pageContext}) => (\n    <Seo \n        title={`Recent talks, page ${pageContext.humanPageNumber}`} \n        description=\"A list of talks and presentations I have given at conferences, workshops, and other events\"\n    />\n)","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from 'react'\nimport PropTypes from \"prop-types\";\nimport {Link} from \"gatsby\";\nimport {Container, Button} from \"react-bootstrap\";\n\nconst Pagination = ({ pageContext }) => {\n    const { pageNumber, numberOfPages, humanPageNumber, previousPagePath, nextPagePath } = pageContext;\n    \n    return (\n        <Container fluid className=\"mx-auto text-center bg-pastel\">\n        <Container>\n            <nav className=\"pagination py-2 d-flex justify-content-between align-items-center\" role=\"navigation\" aria-label=\"Pagination Navigation\">\n                {humanPageNumber > 1 ? (\n                    <Button variant=\"dark\" as={Link} to={previousPagePath} title=\"Go to previous page\" aria-label=\"Go to previous page\">\n                        ← Previous\n                    </Button>\n                ) : (\n                    <div />\n                )}\n                \n                <span className=\"fw-bold\">Page {pageNumber + 1} of {numberOfPages}</span>\n                \n                {humanPageNumber < numberOfPages ? (\n                    <Button variant=\"dark\" as={Link} to={nextPagePath} title=\"Go to next page\" aria-label=\"Go to next page\">\n                        Next →\n                    </Button>\n                ) : (\n                    <div />\n                )}\n            </nav>\n        </Container>\n    </Container>\n    );\n};\n\nPagination.propTypes = {\n    pageContext: PropTypes.object.isRequired,\n};\n\nexport default Pagination;","import React from \"react\";\nimport { Card, Col, Badge } from \"react-bootstrap\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst PostCard = ({ post }) => {\n    const { frontmatter } = post;\n    const { featuredImg, title, slug, date, institution } = frontmatter;\n    const image = getImage(featuredImg);\n\n    return (\n        <Col md={4} className=\"mb-3\">\n            <Card className=\"border-0 bg-light\">\n                {image && (\n                    <GatsbyImage\n                        className=\"card-img-top rounded-3\"\n                        image={image}\n                        alt={title}\n                    />\n                )}\n                <Card.Body className=\"bg-white border-0 rounded-0\">\n                    <Link to={slug} className=\"stretched-link stretched-link__blog_post\">\n                        <h1 className=\"lead text-black fw-bold\">{title}</h1>\n                    </Link>\n                    {date && <h4 className=\"text-info\">{date}</h4>}\n                    {institution && (\n                        <Badge bg=\"dark\" className=\"text-white p-2\">\n                            {institution}\n                        </Badge>\n                    )}\n                </Card.Body>\n            </Card>\n        </Col>\n    );\n};\n\nexport default PostCard;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className =>\n/*#__PURE__*/\n// eslint-disable-next-line react/display-name\nReact.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;"],"names":["TalkPage","React","_ref","data","pageContext","Posts","allMarkdownRemark","edges","filter","edge","node","frontmatter","date","map","PostCard","key","id","post","breadcrumb","Layout","HeaderWithBreadcrumbs","breadcrumbs","crumbs","title","Container","Row","Col","xs","Pagination","displayName","Head","_ref2","Seo","humanPageNumber","description","DivStyledAsH5","CardTitle","className","bsPrefix","as","Component","props","ref","CardBody","CardFooter","context","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardLink","DivStyledAsH6","CardSubtitle","Card","bg","text","border","body","Object","assign","Img","CardImg","Title","Subtitle","Body","Link","Text","CardText","Header","Footer","ImgOverlay","CardImgOverlay","pageNumber","numberOfPages","previousPagePath","nextPagePath","fluid","role","Button","variant","to","featuredImg","slug","institution","image","getImage","md","GatsbyImage","alt","Badge","p","size","active","disabled","buttonProps","tagName","href"],"sourceRoot":""}