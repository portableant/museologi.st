{"version":3,"file":"component---src-pages-tags-js-9fff98baa1e6eba4203d.js","mappings":"gQAyDA,UA7CiBA,IAAA,IACKC,MACIC,mBAAmB,MAAEC,GACrBC,MACIC,cAAc,MAAEC,MAG3BN,EAAA,OACfO,EAAAA,cAACC,EAAAA,EAAM,KACHD,EAAAA,cAACE,EAAAA,EAAS,KACNF,EAAAA,cAACG,EAAAA,EAAG,CAACC,UAAW,aAChBJ,EAAAA,cAAA,MAAII,UAAU,aAAY,QAC1BJ,EAAAA,cAAA,MAAII,UAAU,wBACTR,EAAMS,KAAIC,GACPN,EAAAA,cAAA,MAAIO,IAAKD,EAAIE,WAAYJ,UAAU,uFAC/BJ,EAAAA,cAACS,EAAAA,KAAI,CAACC,GAAK,SAAQC,IAAUL,EAAIE,gBAC5BI,IAAUN,EAAIE,aAEnBR,EAAAA,cAAA,QAAMI,UAAU,iBAAiBE,EAAIO,kBAMhD,EAuBN,MAgBMC,EAAOA,IAChBd,EAAAA,cAACe,EAAAA,EAAG,CAAChB,MAAO,qCAAsCiB,YAAa,0D,uBC5EnE,IAuBIC,EAvBmB,EAAQ,KAuBfC,EAAiB,SAASC,EAAQC,EAAMC,GACtD,OAAOF,GAAUE,EAAQ,IAAM,IAAMD,EAAKE,aAC5C,IAEAC,EAAOC,QAAUP,C","sources":["webpack://museologi.st/./src/pages/tags.js","webpack://museologi.st/./node_modules/lodash/kebabCase.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Seo from \"../components/structure/SEO\";\n\n// Utilities\nimport {kebabCase, startCase} from \"lodash\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout  from \"../components/layouts/layout\"\nimport {Container,Row} from \"react-bootstrap\"\n\nconst TagsPage = ({\n                      data: {\n                          allMarkdownRemark: { group },\n                          site: {\n                              siteMetadata: { title },\n                          },\n                      },\n                  }) => (\n    <Layout>\n        <Container>\n            <Row className={\"post-body\"}>\n            <h1 className=\"ml-4 mt-4\">Tags</h1>\n            <ul className=\"list-group-flush row\">\n                {group.map(tag => (\n                    <li key={tag.fieldValue} className=\"list-item col-md-4 border-top py-2 d-flex justify-content-between align-items-start\">\n                        <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                            {startCase(tag.fieldValue)}\n                        </Link>\n                        <span className=\"badge bg-dark\">{tag.totalCount}</span>\n                    </li>\n                ))}\n            </ul>\n            </Row>\n        </Container>\n    </Layout>\n)\n\nTagsPage.propTypes = {\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            group: PropTypes.arrayOf(\n                PropTypes.shape({\n                    fieldValue: PropTypes.string.isRequired,\n                    totalCount: PropTypes.number.isRequired,\n                }).isRequired\n            ),\n        }),\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n            }),\n        }),\n    }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(limit: 2000) {\n    group(field: {frontmatter: {tags: SELECT}}) {\n      fieldValue\n      totalCount\n    }\n  }\n}\n`\n\nexport const Head = () => (\n    <Seo title={\"An index of tags used on this site\"} description={\"An indexed view of tags used on this site, with counts\"}/>\n)","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["_ref","data","allMarkdownRemark","group","site","siteMetadata","title","React","Layout","Container","Row","className","map","tag","key","fieldValue","Link","to","_kebabCase","_startCase","totalCount","Head","Seo","description","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports"],"sourceRoot":""}