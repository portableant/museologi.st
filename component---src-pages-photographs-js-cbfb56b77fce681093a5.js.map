{"version":3,"file":"component---src-pages-photographs-js-cbfb56b77fce681093a5.js","mappings":"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","sources":["webpack://museologi.st/./node_modules/react-bootstrap/esm/CardTitle.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardBody.js","webpack://museologi.st/./src/pages/photographs.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardFooter.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardLink.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardSubtitle.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/Card.js","webpack://museologi.st/./src/components/structure/post-card.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardText.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardImgOverlay.js","webpack://museologi.st/./node_modules/react-bootstrap/esm/CardImg.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","/**\n * PhotographsPage component displays a collection of photograph posts.\n *\n * @component\n * @param {Object} props - Component props.\n * @param {Object} props.data - Data returned from GraphQL query.\n * @param {Object} props.data.allMarkdownRemark - Markdown remark data.\n * @param {Array} props.data.allMarkdownRemark.edges - Array of post edges.\n * @param {Object} props.pageContext - Context for the page, including breadcrumbs.\n * @param {Object} props.pageContext.breadcrumb - Breadcrumb navigation data.\n * @returns {JSX.Element} The rendered photographs page.\n */\n\n/**\n * GraphQL query to fetch photograph posts.\n *\n * @typedef {Object} PhotographsQuery\n * @property {Object} allMarkdownRemark - Markdown remark data.\n * @property {Array} allMarkdownRemark.edges - Array of post edges.\n * @property {Object} allMarkdownRemark.edges.node - Individual post node.\n * @property {string} allMarkdownRemark.edges.node.id - Unique post ID.\n * @property {Object} allMarkdownRemark.edges.node.frontmatter - Post frontmatter.\n * @property {string} allMarkdownRemark.edges.node.frontmatter.date - Post date.\n * @property {string} allMarkdownRemark.edges.node.frontmatter.slug - Post slug.\n * @property {string} allMarkdownRemark.edges.node.frontmatter.title - Post title.\n * @property {Object} allMarkdownRemark.edges.node.frontmatter.featuredImg - Featured image data.\n */\n\n/**\n * Head component for SEO metadata.\n *\n * @returns {JSX.Element} SEO metadata for the photographs page.\n */\nimport * as React from \"react\"\nimport Layout from \"../components/layouts/layout\"\nimport PostCard from \"../components/structure/post-card\"\nimport { graphql } from \"gatsby\"\nimport { Row, Container } from 'react-bootstrap'\nimport Seo from \"../components/structure/SEO\"\nimport HeaderWithBreadcrumbs from \"../components/structure/headerWithBreadcrumbs\"\n\nconst PhotographsPage = ({ data: { allMarkdownRemark: { edges } }, pageContext }) => {\n    // Use useMemo to prevent unnecessary re-computation\n    const posts = React.useMemo(() => \n        edges\n            .filter(edge => edge.node.frontmatter?.date) // More robust null checking\n            .map(edge => (\n                <PostCard \n                    key={edge.node.id} \n                    post={edge.node}\n                />\n            )), [edges]\n    )\n\n    const { breadcrumb } = pageContext\n\n    return (\n        <Layout>\n            <HeaderWithBreadcrumbs\n                breadcrumbs={breadcrumb?.crumbs || []}\n                title=\"Random Photographs\"\n                date={null}\n            />\n            <Container>\n                <Row>\n                    {posts}\n                </Row>\n            </Container>\n        </Layout>\n    )\n}\n\nexport default PhotographsPage\n\nexport const pageQuery = graphql`\n    query PhotographsQuery {\n        allMarkdownRemark(\n            filter: { frontmatter: { section: { eq: \"image\" } } }\n            sort: { frontmatter: { date: DESC } }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        slug\n                        title\n                        featuredImg {\n                            childImageSharp {\n                                gatsbyImageData(\n                                    placeholder: BLURRED\n                                    height: 600\n                                    width: 600\n                                    formats: [AUTO, WEBP]\n                                    quality: 80\n                                    transformOptions: { \n                                        grayscale: false\n                                        fit: COVER\n                                        cropFocus: CENTER\n                                    }\n                                )\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const Head = () => (\n    <Seo \n        title=\"Random Photographs\" \n        description=\"A collection of photographs I like\"\n    />\n)","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from \"react\";\nimport { Card, Col, Badge } from \"react-bootstrap\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst PostCard = ({ post }) => {\n    const { frontmatter } = post;\n    const { featuredImg, title, slug, date, institution } = frontmatter;\n    const image = getImage(featuredImg);\n\n    return (\n        <Col md={4} className=\"mb-3\">\n            <Card className=\"border-0 bg-light\">\n                {image && (\n                    <GatsbyImage\n                        className=\"card-img-top rounded-3\"\n                        image={image}\n                        alt={title}\n                    />\n                )}\n                <Card.Body className=\"bg-white border-0 rounded-0\">\n                    <Link to={slug} className=\"stretched-link stretched-link__blog_post\">\n                        <h1 className=\"lead text-black fw-bold\">{title}</h1>\n                    </Link>\n                    {date && <h4 className=\"text-info\">{date}</h4>}\n                    {institution && (\n                        <Badge bg=\"dark\" className=\"text-white p-2\">\n                            {institution}\n                        </Badge>\n                    )}\n                </Card.Body>\n            </Card>\n        </Col>\n    );\n};\n\nexport default PostCard;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className =>\n/*#__PURE__*/\n// eslint-disable-next-line react/display-name\nReact.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;"],"names":["DivStyledAsH5","CardTitle","className","bsPrefix","as","Component","props","ref","displayName","CardBody","_ref","data","allMarkdownRemark","edges","pageContext","posts","React","filter","edge","_edge$node$frontmatte","node","frontmatter","date","map","PostCard","key","id","post","breadcrumb","Layout","HeaderWithBreadcrumbs","breadcrumbs","crumbs","title","Container","Row","Head","Seo","description","CardFooter","context","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardLink","DivStyledAsH6","CardSubtitle","Card","bg","text","border","body","Object","assign","Img","CardImg","Title","Subtitle","Body","Link","Text","CardText","Header","Footer","ImgOverlay","CardImgOverlay","featuredImg","slug","institution","image","getImage","Col","md","GatsbyImage","alt","to","Badge","p","variant"],"sourceRoot":""}