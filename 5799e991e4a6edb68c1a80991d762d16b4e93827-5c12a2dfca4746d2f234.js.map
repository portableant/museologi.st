{"version":3,"file":"5799e991e4a6edb68c1a80991d762d16b4e93827-5c12a2dfca4746d2f234.js","mappings":"2GAEA,IAyBIA,EAAY,SAAmBC,EAAOC,GACxC,GAAuB,iBAAVD,IAAsBE,MAAMC,QAAQH,GAC/C,MAAM,IAAII,UAAU,gDAEtBH,EAAUI,OAAOC,OAAO,CACtBC,YAAY,GACXN,GACH,IAAuCO,EAYvC,OARER,EADEE,MAAMC,QAAQH,GACRA,EAAMS,KAAI,SAAUD,GAC1B,OAAOA,EAAEE,MACX,IAAGC,QAAO,SAAUH,GAClB,OAAOA,EAAEI,MACX,IAAGC,KAAK,KAEAb,EAAMU,OAEK,IAAjBV,EAAMY,OACD,GAEY,IAAjBZ,EAAMY,OACDX,EAAQM,WAAaP,EAAMc,cAAgBd,EAAMe,eAEvCf,IAAUA,EAAMe,gBAEjCf,EApDoB,SAA2BgB,GAIjD,IAHA,IAAIC,GAAkB,EAClBC,GAAkB,EAClBC,GAAsB,EACjBC,EAAI,EAAGA,EAAIJ,EAAOJ,OAAQQ,IAAK,CACtC,IAAIC,EAAYL,EAAOI,GACnBH,GAAmB,WAAWK,KAAKD,IAAcA,EAAUP,gBAAkBO,GAC/EL,EAASA,EAAOO,MAAM,EAAGH,GAAK,IAAMJ,EAAOO,MAAMH,GACjDH,GAAkB,EAClBE,EAAsBD,EACtBA,GAAkB,EAClBE,KACSF,GAAmBC,GAAuB,WAAWG,KAAKD,IAAcA,EAAUN,gBAAkBM,GAC7GL,EAASA,EAAOO,MAAM,EAAGH,EAAI,GAAK,IAAMJ,EAAOO,MAAMH,EAAI,GACzDD,EAAsBD,EACtBA,GAAkB,EAClBD,GAAkB,IAElBA,EAAkBI,EAAUN,gBAAkBM,GAAaA,EAAUP,gBAAkBO,EACvFF,EAAsBD,EACtBA,EAAkBG,EAAUP,gBAAkBO,GAAaA,EAAUN,gBAAkBM,EAE3F,CACA,OAAOL,CACT,CA4BYQ,CAAkBxB,IAE5BA,EAAQA,EAAMyB,QAAQ,YAAa,IAAIV,cAAcU,QAAQ,mBAAmB,SAAUC,EAAGC,GAC3F,OAAOA,EAAGb,aACZ,IAAGW,QAAQ,cAAc,SAAUG,GACjC,OAAOA,EAAEd,aACX,IA1BuCN,EA2BpBR,EA1BVC,EAAQM,WAAaC,EAAEqB,OAAO,GAAGf,cAAgBN,EAAEe,MAAM,GAAKf,EA2BzE,EACAsB,EAAOC,QAAUhC,EAEjB+B,EAAOC,QAAP,QAAyBhC,C,oCC/DzBM,OAAO2B,eAAeD,EAAS,aAAc,CAC3CE,OAAO,IAETF,EAAiB,aAAI,EACrB,IAAIG,EAWJ,SAAiCC,GAC/B,GAAIA,GAAOA,EAAIC,WACb,OAAOD,EAET,GAAY,OAARA,GAAiC,WAAjBE,EAAQF,IAAoC,mBAARA,EACtD,MAAO,CACL,QAAWA,GAGf,IAAIG,EAAQC,IACZ,GAAID,GAASA,EAAME,IAAIL,GACrB,OAAOG,EAAMG,IAAIN,GAEnB,IAAIO,EAAS,CAAC,EACVC,EAAwBtC,OAAO2B,gBAAkB3B,OAAOuC,yBAC5D,IAAK,IAAIC,KAAOV,EACd,GAAI9B,OAAOyC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAClD,IAAII,EAAON,EAAwBtC,OAAOuC,yBAAyBT,EAAKU,GAAO,KAC3EI,IAASA,EAAKR,KAAOQ,EAAKC,KAC5B7C,OAAO2B,eAAeU,EAAQG,EAAKI,GAEnCP,EAAOG,GAAOV,EAAIU,EAEtB,CAEFH,EAAgB,QAAIP,EAChBG,GACFA,EAAMY,IAAIf,EAAKO,GAEjB,OAAOA,CACT,CAzCaS,CAAwB,EAAQ,OACzCC,EAAS,EAAQ,MAErB,SAASb,IACP,GAAuB,mBAAZc,QAAwB,OAAO,KAC1C,IAAIf,EAAQ,IAAIe,QAIhB,OAHAd,EAA2B,WACzB,OAAOD,CACT,EACOA,CACT,CAgCA,SAASD,EAAQF,GAUf,OAREE,EADoB,mBAAXiB,QAAoD,iBAApBA,OAAOC,SACtC,SAAiBpB,GACzB,cAAcA,CAChB,EAEU,SAAiBA,GACzB,OAAOA,GAAyB,mBAAXmB,QAAyBnB,EAAIqB,cAAgBF,QAAUnB,IAAQmB,OAAOR,UAAY,gBAAkBX,CAC3H,EAEKE,EAAQF,EACjB,CAMA,SAASsB,EAAkBC,EAAQC,GACjC,IAAK,IAAIvC,EAAI,EAAGA,EAAIuC,EAAM/C,OAAQQ,IAAK,CACrC,IAAIwC,EAAaD,EAAMvC,GACvBwC,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjD1D,OAAO2B,eAAe0B,EAAQE,EAAWf,IAAKe,EAChD,CACF,CAMA,SAASI,EAA2BC,EAAMjB,GACxC,OAAIA,GAA2B,WAAlBX,EAAQW,IAAsC,mBAATA,EAKpD,SAAgCiB,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAE3B,OAAOD,CACT,CAPSE,CAAuBF,GAFrBjB,CAGX,CAOA,SAASoB,EAAgBC,GAIvB,OAHAD,EAAkB/D,OAAOiE,eAAiBjE,OAAOkE,eAAiB,SAAyBF,GACzF,OAAOA,EAAEG,WAAanE,OAAOkE,eAAeF,EAC9C,EACOD,EAAgBC,EACzB,CAcA,SAASI,EAAgBJ,EAAGK,GAK1B,OAJAD,EAAkBpE,OAAOiE,gBAAkB,SAAyBD,EAAGK,GAErE,OADAL,EAAEG,UAAYE,EACPL,CACT,EACOI,EAAgBJ,EAAGK,EAC5B,CA5GA,EAAQ,KA6GR,IAkFIC,EAjFJ,SAAUC,GAER,SAASC,EAAUlB,GACjB,IAAImB,EAgBJ,OA7EJ,SAAyBC,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAI5E,UAAU,oCAExB,CA0DI6E,CAAgBC,KAAML,IACtBC,EAAQd,EAA2BkB,KAAMd,EAAgBS,GAAW7B,KAAKkC,KAAMvB,KACzEwB,MAAQ,CACZC,QAAS,EACTC,QAAS,GAEXP,EAAMQ,QAAUR,EAAMnB,MAAM2B,SAAW,OAGvCR,EAAMS,UAAYT,EAAMnB,MAAM4B,WAAa,CAAC,EAC5CT,EAAMU,aAAeV,EAAMnB,MAAM6B,cAAgB,CAAC,EAClDV,EAAMW,UAAYX,EAAMnB,MAAM8B,WAAa,EAC3CX,EAAMY,KAAOZ,EAAMnB,MAAM+B,MAAQ,GACjCZ,EAAMa,eAAiBb,EAAMnB,MAAMgC,eAAiB,EAAIb,EAAMnB,MAAMgC,eAAiB,EACrFb,EAAMc,eAAsCC,IAA1Bf,EAAMnB,MAAMiC,WAAiCd,EAAMnB,MAAMiC,UACpEd,CACT,CAhEF,IAAsBE,EAAac,EAAYC,EA2H7C,OApGF,SAAmBC,EAAUC,GAC3B,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAI7F,UAAU,sDAEtB4F,EAASlD,UAAYzC,OAAO6F,OAAOD,GAAcA,EAAWnD,UAAW,CACrEU,YAAa,CACXvB,MAAO+D,EACPjC,UAAU,EACVD,cAAc,KAGdmC,GAAYxB,EAAgBuB,EAAUC,EAC5C,CAUEE,CAAUtB,EAAWD,GA7CDI,EAiEPH,GAjEoBiB,EAiET,CAAC,CACvBjD,IAAK,cACLZ,MAAO,YACL,EAAImB,EAAOgD,iBAAiBlB,KAAKvB,MAAM8B,UAAWP,KAAKvB,MAAM+B,KAAMR,KAAKC,MAAME,QAChF,GACC,CACDxC,IAAK,oBACLZ,MAAO,WACL,IAAIoE,EAASnB,KACToB,SACFA,OAAOC,SAAW,WAChBF,EAAOG,SAAS,CACdpB,SAAS,EAAIhC,EAAOqD,kBAAkBJ,EAAO1C,MAAM8B,WACnDJ,SAAS,EAAIjC,EAAOsD,iBAExB,EAEJ,GACC,CACD7D,IAAK,SACLZ,MAAO,WACL,IAAI0E,EAASzB,KACT0B,EAAc1B,KAAKvB,MACrB2B,EAAUsB,EAAYtB,QACtBuB,EAAWD,EAAYC,SACrBC,EAAU5B,KAAKC,MAAMC,SAAWF,KAAKS,eACrCoB,EAAc,iBACdC,EAAc,iBAWlB,MAVgB,SAAZ1B,GAAkC,WAAZA,EACR,SAAZA,IACFyB,EAAc,YACdC,EAAc,cAGhBD,EAAczB,EAAU,QACxB0B,EAAc1B,EAAU,SAE1B2B,QAAQC,IAAI,SAAUhC,KAAKvB,MAAOuB,KAAKvB,MAAMkD,UACtC3E,EAAgB,QAAEiF,cAAc,MAAO,CAC5CC,QAAS,WACP,OAAOT,EAAOU,aAChB,EACAC,UAAW,oBAAsBR,EAAUE,EAAcD,IACxD7E,EAAgB,QAAEiF,cAAc,MAAO,CACxCG,UAAW,qBACXC,MAAOrC,KAAKK,WACXsB,EAAW3G,MAAMC,QAAQ0G,GAAYA,EAASpG,IAAI+G,OAAO,SAAUC,GACpE,OAAOvF,EAAgB,QAAEiF,cAAc,MAAO,CAC5CtE,IAAK4E,GACJD,MACL,IAAKX,GAAY3E,EAAgB,QAAEiF,cAAc,MAAO,KAAMN,GAAY3E,EAAgB,QAAEiF,cAAc,MAAO,CAC/GG,UAAW,2BACVpF,EAAgB,QAAEiF,cAAc,OAAQ,KAAM,OAAQjF,EAAgB,QAAEiF,cAAc,MAAO,CAC9FG,UAAW,iBAAmBpC,KAAKU,UAAY,GAAK,iBACpD2B,MAAOrC,KAAKM,cACXN,KAAKC,MAAMC,QAAU,MAC1B,MAxHc3B,EAAkBuB,EAAYlC,UAAWgD,GACrDC,GAAatC,EAAkBuB,EAAae,GAyHzClB,CACT,CAhFA,CAgFE3C,EAAOwF,WAET3F,EAAiB,QAAI4C,C,kCC5LrB,SAAS+B,IACP,IAAIiB,EAAY,EAMhB,OALIC,SAASC,iBAAmBD,SAASC,gBAAgBF,UACvDA,EAAYC,SAASC,gBAAgBF,UAC5BC,SAASE,OAClBH,EAAYC,SAASE,KAAKH,WAErBA,CACT,CAlBAtH,OAAO2B,eAAeD,EAAS,aAAc,CAC3CE,OAAO,IAETF,EAAQ2E,aAAeA,EACvB3E,EAAQqE,gBAsBR,SAAyB2B,EAAUrC,EAAML,GACvC,IAAI2C,EAAQ,EACRC,EAAQC,aAAY,WAClB7C,EAAU2C,GAASD,EAEjB1C,GADJ2C,GAAStC,IACcqC,EACrBzB,OAAO6B,SAAS,EAAG9C,EAAU2C,GAE7B1B,OAAO6B,SAAS,EAAGJ,GAGrBK,cAAcH,EAElB,GAAG,EACL,EAnCAlG,EAAQ0E,iBAwCR,SAA0BhB,GACxB,IAAIL,EAAU,EACVK,EAAYiB,MACdtB,EAAUiD,KAAKC,OAAO5B,IAAiBjB,IAAcmC,SAASE,KAAKS,aAAe9C,EAAYa,OAAOkC,aAAe,MAEtH,OAAOpD,EAAU,IAAM,IAAMA,CAC/B,C,uBCrDAtD,EAAOC,QAAU,EAAjB,MACAA,EAAA,e,2rBC6mByB0G,IAAAA,EC/lBe,WD+lBfA,MC/lBe,mEAER3F,SAAAA,EAgBhC,MAwBE4F,SAAAA,GAAAA,IAAAA,EAGA,OAzBAA,SAAAA,GAAAA,IAAAA,EAAAA,EAAAA,OAAAA,QAAAA,MAGQA,GAAAA,OAAAA,EAAAA,EAAMC,SAAAA,OAAAA,EAANC,EAAcC,eAAAA,EAAdC,EAAwBC,IAAAA,CAHhCL,CAyBsBA,GAAAA,EAlBtBA,SAAAA,GAAAA,OACsCM,QAAAA,MAAQN,OAAAA,EAAAA,EAAMO,gBAAAA,CADpDP,CAsB4BA,GAAAA,EACdO,gBAlBdP,SAAAA,GAAAA,OACkCM,QAAAA,MAAQN,OAAAA,EAAAA,EAAMQ,YAAAA,CADhDR,CAqBwBA,GAAAA,EACVQ,YAAAA,MAAAA,GAAAA,OAAAA,EAEPR,EAAMS,sBAAAA,EAANC,EAAuBH,eAAAA,EAAAA,EAGTP,SAAAA,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAAA,OAAAA,EACrBW,EAASX,KAAAA,OAAAA,EAATY,EAAgBX,SAAAA,OAAAA,EAAhBY,EAAwBV,eAAAA,EAAxBW,EAAkCT,GAAAA,EAiIhCU,SAAAA,EAgBFC,EACAC,EACAhB,EACAiB,EACArC,GA4BA,YA5BAA,IAAAA,IAAAA,EAAuB,CAAC,GAajBA,EAAAA,CAAAA,EAKFoB,EAAAA,CACHiB,QAAAA,EACAC,WAAYH,EACZ,kBAAkB,GAClBnC,MAAM,EAANA,CAAAA,EACKA,EAAAA,CACHuC,QAASH,EAAW,EAAI,iBAa5BI,EACAJ,EACAK,EACAC,EACAxB,EACAyB,EACAC,EACAC,GAEA,MAAoC,CAAC,EAEjCF,IACFG,EAAaH,gBAAkBA,EAAAA,UAE3BF,GACFK,EAAaJ,MAAQA,EACrBI,EAAa5B,OAASA,EACtB4B,EAAaH,gBAAkBA,EAC/BG,EAAatC,SAAAA,aAAAA,gBACJiC,GAAAA,cAMAA,KALTK,EAAatC,SAAAA,WACbsC,EAAaC,IAAM,EACnBD,EAAaE,KAAO,EACpBF,EAAaG,OAAS,EACtBH,EAAaI,MAAQ,IAUrBN,IACFE,EAAaF,UAAYA,GAGvBC,IACFC,EAAaD,eAAiBA,GAEhC,WACKL,EAAAA,CACH,eAAc,EACd,yBAAyB,GACzBxC,MAAM,EAANA,CACEuC,QAASH,EAAW,EAAI,EACxBe,WAAW,wBACRL,KAeP,OAJIJ,CAAAA,CAgF8CU,IC5T7CC,ED4T6CD,EAAAA,CAAAA,YAAAA,EE9UE,SF8UFA,GE3UlDlC,IAFAuB,EAAAA,EADmEA,OAEnEC,EAAAA,EAFmEA,MAGnExB,EAAAA,EAHmEA,OAKnE,oBAAIuB,EAAAA,EAAAA,cAAAA,MAAAA,CAAAA,eAAAA,EAEiBzC,MAAO,CAAEsD,WAAgBpC,EAASwB,EAAS,2BAI5DD,EAAAA,EAAAA,cAAAA,MAAAA,CAEKzC,MAAO,CAAEuD,SAAUb,EAAOc,QAAQ,UACrCC,EAAAA,cAAAA,MAAAA,CACEC,IAAI,GACJC,KAAK,6BACO,OACZnC,IAAAA,mDAAwDN,EAAAA,YAAkBwB,EAAAA,kEAC1E1C,MAAO,CACLuD,SAAS,OACTC,QAAQ,QACRhD,SAAS,aAATA,IAAAA,EAAAA,EAWV,SAAAoD,GAAAA,IAAyBtE,EAAAA,EAAFA,SAAelD,EAAAA,EAAAA,EAAAA,GACpC,uBACGyH,EAAAA,SAAAA,KACCJ,EAAAA,cAACK,EAAAA,EAAAA,CAAAA,EAAU1H,IACVkD,EAEmC,+FDtEC,SAAAyE,GAAAA,IAC3CvC,EAIAc,EAL0Dd,IAE1DwC,EAGA1B,EAL0D0B,OAG1D3B,EAEAC,EAL0DD,QAAAA,EAK1DC,EAL0DoB,IAI1DA,OAAAA,IAAAA,EAAAA,GAAAA,EACApB,EAAAA,EAL0DA,WAMvDlG,EAAAA,EAAAA,EAAAA,GAEH,kCAEQA,EAAAA,CACJ6H,SAAS,QACT5B,QAASA,EACTb,IAAKc,EAAad,OAAAA,EAAMlD,WACbgE,OAAAA,EAAad,EACxBwC,OAAQ1B,EAAa0B,OAAAA,EAAS1F,cAChBgE,OAAAA,EAAa0B,EAC3BN,IAAKA,IAAAA,EAAAA,EAKoC,SAAAK,GAAAA,IAC7CzC,EAEayC,EAHiDzC,SAAAA,EAGjDyC,EAHiDX,QAE9DA,OAAAA,IAAAA,EAAU,OACGW,EAHiDzB,WAG9DA,OAAAA,IAAAA,GAAa,EACVlG,EAAAA,EAAAA,EAAAA,GAEH,EAAcA,EAAM8H,QAAAA,MAAS5C,OAAAA,EAAAA,EAAU4C,OAAAA,EAErCT,EAAAA,cAACU,EAAAA,EAAAA,CAAAA,EAAU/H,EAAWkF,EAAAA,CAAU4C,MAAOA,EAAO5B,WAAYA,KAG5D,OAAKc,EAAQ/J,OAAAA,EAAAA,cAAAA,UAAAA,KAMR+J,EAAQlK,KAAI,gBAAGkL,EAAAA,EAAAA,MAAOJ,EAAAA,EAAAA,OAAQK,EAAAA,EAAAA,KAAAA,OAC7BZ,EAAAA,cAAAA,SAAAA,CACEnI,IAAQ8I,EAAAA,IAASC,EAAAA,IAAQL,EACzBK,KAAMA,EACND,MAAOA,EACPJ,OAAQ1B,EAAa0B,OAAAA,EAAS1F,cAChBgE,OAAAA,EAAa0B,EAC3BE,MAAOA,GAAAA,IAGVb,GAAAA,CAAAA,EAKPc,EAAMG,UAAY,CAChB9C,IAAK+C,EAAAA,OAAAA,WACLb,IAAKa,EAAAA,OAAAA,WACLL,MAAOK,EAAAA,OACPP,OAAQO,EAAAA,OACRjC,WAAYiC,EAAAA,MAGdC,EAAQC,YAAAA,UACRD,EAAQF,UAAY,CAClBZ,IAAKa,EAAAA,OAAAA,WACLjC,WAAYiC,EAAAA,KACZjD,SAAUiD,EAAAA,MAAgB,CACxB/C,IAAK+C,EAAAA,OAAAA,WACLP,OAAQO,EAAAA,OACRL,MAAOK,EAAAA,SAETnB,QAASmB,EAAAA,QACPA,EAAAA,UAAoB,CAClBA,EAAAA,MAAgB,CACdH,MAAOG,EAAAA,OAAAA,WACPF,KAAME,EAAAA,OACNL,MAAOK,EAAAA,OACPP,OAAQO,EAAAA,OAAAA,aAEVA,EAAAA,MAAgB,CACdH,MAAOG,EAAAA,OACPF,KAAME,EAAAA,OAAAA,WACNL,MAAOK,EAAAA,OACPP,OAAQO,EAAAA,OAAAA,iBAA2BG,IAAAA,EAAAA,CAAAA,YAAAA,EE5GzC,SAAAX,GAAAA,IAAuBzC,EAAAA,EAAFA,SAAelF,EAAAA,EAAAA,EAAAA,GAClC,OAAIkF,EAAAA,EAAAA,cAECkD,EAAAA,EAAAA,CAAAA,EACKpI,EAAAA,CACJkF,SAAU,CACRE,IAAKF,GAAAA,eAAAA,EAGPoC,IAAI,iCAIQtH,GAAAA,EAItBuI,EAAYF,YAAAA,cACZE,EAAYL,UAAY,CACtBhD,SAAUiD,EAAAA,OACVnB,QAAQ,OAARA,EAASoB,EAAQF,gBAAAA,EAARM,EAAmBxB,QAC5BM,IAAK,SAAUtH,EAAOyI,EAAUC,GAC9B,OAAK1I,EAAMyI,GAAAA,IAAAA,MAAAA,iBAKSA,EAAAA,kBAA4BC,EAAAA,yBAAAA,IAAAA,GChCvCC,IAAAA,EAAoC,SAAmB3I,GAClE,uCAEIqH,EAAAA,cAACe,EAAAA,EAAAA,CAAAA,EAAYpI,IACbqH,EAAAA,cAAAA,WAAAA,KACEA,EAAAA,cAACe,EAAAA,EAAAA,CAAAA,EAAYpI,EAAAA,CAAOkG,YAAAA,MAAY,EAMxCyC,EAAUN,YAAAA,YACVM,EAAUT,UAAYE,EAAQF,UAAAA,ICY9B,IDZ8BA,EE2G2B,SACvDlI,EACAyI,EACAC,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OACGE,EAAAA,IAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAAAA,OAEE5I,EAAMsH,KAAAA,KAAOtH,EAAMsH,IAAAA,IAAAA,OAAAA,MAAAA,IAAAA,CAMAtH,EAAOyI,EAAUC,GAAAA,OAAkBE,IAAAA,IAAAA,MAAAA,iCAJtBF,EAAAA,0JAAAA,EAAAA,EAOd,CACvBG,MAAOV,IAAAA,OAAAA,WACPb,IAAKwB,GAAAA,EAAAA,CAAAA,KAAAA,QAAAA,QAAAA,kBAAAA,YAAAA,QAAAA,cAAAA,SAAAA,WAAAA,EAAAA,CAAAA,QAAAA,aAAAA,EDjHY,IAAIC,IAkCvB,EAAkD,SAAAC,GAAAA,IAAAA,EAShDC,EAT6EC,GAC7EA,OAAAA,IAAAA,EAAAA,MAAAA,EACAL,EAOAI,EAT6EJ,MAG7EjF,EAMAqF,EAT6ErF,MAI7E2C,EAKA0C,EAT6E1C,gBAK7E5C,EAIAsF,EAT6EtF,UAMtEwF,EAGPF,EAHAG,MACAC,EAEAJ,EAT6EI,YAQ7EC,EACAL,EAT6EK,OAS7EL,EAAAA,EAT6EA,QAU1EjJ,EAAAA,EAAAA,EAAAA,GAEKsG,EAA0BuC,EAA5BvC,MAASxB,EAAmB+D,EAA5B/D,OAAiBuB,EAAWwC,EAA5BxC,OAA4BwC,EAAAA,SLOlCvC,EACAxB,EACAuB,GAIA,MAAoC,CAAC,EAErC,yBAmBA,MAdekD,UAGXlD,GACFK,EAAaJ,MAAQA,EACrBI,EAAa5B,OAASA,GAAAA,gBACbuB,IAKT1C,EAAAA,yDAGK,CACLA,UAAAA,EACA,4BAA4B,GAC5BC,MAAO8C,EAAAA,CKrCyBmC,CAKdvC,EAAOxB,EAAQuB,GAH1BmD,EACIC,EADX7F,MACW6F,EAAAA,EAAX9F,UACG+F,EAAAA,EAAAA,EAAAA,GAAAA,GAEQC,EAAAA,EAAAA,UAAAA,GACIC,EAAAA,EAAAA,UAAQ,kBAAMC,KAAKC,UAAUjB,EAAM7D,OAAAA,GAAS,CAAC6D,EAAM7D,SAGhEmE,IACFxF,EAAYwF,GAGd,eHxCA9C,EACAC,EACAxB,GAEA,SAWA,MAAM,cAVFuB,IACF0D,EAAAA,+CACGjF,EAASwB,EAAS,kCAInBD,IACF0D,EAAAA,0BAAkCzD,EAAAA,iIAAqIxB,EAAAA,YAAkBwB,EAAAA,yIAAAA,CAAAA,CG4B3L,CAAuBD,EAAQC,EAAOxB,GA+HtC,OA7HAkF,EAAAA,EAAAA,YAAU,WACHC,IACHA,EAA6BC,QAAAA,IAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,OAAAA,KAAAA,EAAAA,KAAAA,EAAAA,OAAyBC,MACpD,gBAAGC,EAAAA,EAAAA,oBAAqBC,EAAAA,EAAAA,qBAAAA,OACtBC,EAAcF,EAEP,CACLA,oBAAAA,EACAC,qBAAAA,EAAAA,KAQR,IA4CA,IA5CA,EAAiBE,EAAK7I,QAAQ8I,cAAc,2BAG5C,OAAIC,GAAYC,KACVD,EAASE,UAAAA,MAEXtB,GAAAA,EAAc,CACZuB,WAAU,IAAC,MAEbtB,GAAAA,EAAS,CACPsB,WAAU,IAIZC,YAAW,WACTJ,EAASK,gBAAgB,wBAAhBA,GACR,WAEHzB,GAAAA,EAAc,CACZuB,WAAU,IAGZH,EAASM,iBAAiB,QAAQ,SAAS,IACzCN,EAASO,oBAAoB,OAAQC,GAAAA,MAErC3B,GAAAA,EAAS,CACPsB,WAAU,IAGZC,YAAW,WACTJ,EAASK,gBAAgB,wBAAhBA,GACR,YAIPI,EAAWC,IAAIC,IAKbd,GAAeY,EAAWrM,IAAIuM,QAAlC,GAMAnB,EAA2BE,MACzB,YAAwBE,IAArBD,EAAAA,EAAAA,oBAAqBC,EAAAA,EAAAA,qBACjBE,EAAK7I,UAIV6I,EAAK7I,QAAQ2J,UAAYjB,EAAAA,EAAAA,CACvBrE,WAAU,EACVC,SAAUkF,EAAWrM,IAAIuM,GACzBvC,MAAAA,GACG7I,IAGAkL,EAAWrM,IAAIuM,KAClBE,EAAiBC,uBAAsB,WACjChB,EAAK7I,UACP8J,EAAkBnB,EAChBE,EAAK7I,QACL0J,EACAF,EACAtH,EACAyF,EACAC,EACAL,GAAAA,KAAAA,IASL,WACDqC,GACFG,qBAAqBH,GAEnBE,GACFA,GAAAA,EAAAA,GAGH,CAAC3C,KAGJ6C,EAAAA,EAAAA,kBAAgB,WACVR,EAAWrM,IAAIuM,IAAad,IAC9BC,EAAK7I,QAAQ2J,UAAYf,EAAAA,EAAAA,CACvBvE,UAAWmF,EAAWrM,IAAIuM,GAC1BpF,SAAUkF,EAAWrM,IAAIuM,GACzBvC,MAAAA,GACG7I,IAAAA,MAILqJ,GAAAA,EAAc,CACZuB,WAAU,IAAC,MAEbtB,GAAAA,EAAS,CACPsB,WAAU,IAAC,GAGd,CAAC/B,KAAAA,EAAAA,EAAAA,eAGiBK,EAAAA,EAAAA,CAAAA,EAChBQ,EAAAA,CACH9F,MAAM,EAANA,CAAAA,EACK4F,EACA5F,EAAAA,CACH2C,gBAAAA,IAEF5C,UAAc8F,GAAS9F,EAAAA,IAAgBA,EAAAA,IACvCgI,IAAKpB,EACLqB,wBAAyB,CACvBC,OAAQ9B,GAEV+B,0BAAyB,IAAC,KAIkCC,EAAAA,EAAAA,OAC9D,SAAqB/L,GACnB,OAAKA,EAAM6I,OASDmD,EAAAA,EAAAA,eAKWC,EAAqBjM,GAZ9BgM,IAAAA,IAgBhBE,EAAYhE,UAAYA,EACxBgE,EAAY7D,YAAAA,cAAAA,IEtOV6D,EFsOU7D,EAAAA,CAAAA,MAAAA,cAAAA,UAAAA,QAAAA,SAAAA,cAAAA,mBAAAA,cAAAA,UAAAA,UAAAA,mBAAAA,aAAAA,aAAAA,cAAAA,cAAAA,iBAAAA,cAAAA,wBAAAA,EExL6C,SACvDrI,EACAyI,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OACGG,EAAAA,IAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAAAA,MAAAA,cAGD5I,EAAMqG,QAAAA,UACLoC,GAAAA,WAAwBA,IACzBzI,EAAMyI,GAAAA,IAAAA,OAAAA,MAAAA,IAAAA,CAMgBzI,EAAOyI,GAAAA,OAAaG,IAAAA,IAAAA,MAAAA,IAHpCH,EAAAA,KAAazI,EAAMyI,GAAAA,+CAAAA,EAAAA,EAMR,IAAIM,IAAI,CAAC,QAAD,8BAEJ,CACvB3D,IAAK+C,IAAAA,OAAAA,WACLb,IAAKwB,EACLxC,MAAO6F,EACPrH,OAAQqH,EACRrE,MAAOK,IAAAA,OACP9B,OAASrG,SAAAA,GACP,YAAIA,EAAMqG,SAGN+F,EAAavN,IAAImB,EAAMqG,QAI3B,OAAO,IAAIgG,MAAM,iBACErM,EAAMqG,OAAAA,qHAAAA,GAAAA,GAhF3B6F,ECLgBI,EDOT,SAAP,OACElH,EAEAmH,EAH0BnH,IAEboH,EACbD,EADAE,YACAF,EAAAA,EAH0BA,QAsBvBvM,EAAAA,EAAAA,EAAAA,GAMH,OAJIuM,GACFjJ,QAAQ0I,KAAKO,GAGXC,EAAAA,EAAAA,cACMN,EAAAA,EAAAA,CAAYrD,MAAO2D,GAAexM,KAE5CsD,QAAQ0I,KAAK,mBAAoB5G,GAEvB4G,KAAAA,GCtCdU,EAAYrE,YAAAA,cACZqE,EAAYxE,UAAYA,C,2FChBlByE,EAAS,SAAH,OAAKC,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAS,OAEjC,0BAAQjJ,MAAO,CACXkJ,WAAY,UACZC,aAAc,SAId,uBAAKpJ,UAAU,gDAAgDC,MAAO,CAClEkJ,WAAY,UACZC,aAAc,YAEd,uBAAKpJ,UAAU,mBACX,gBAAC,EAAAqJ,KAAI,CAACC,GAAG,IAAItJ,UAAU,2BAAyB,iBAC7BiJ,GAEnB,0BAAQjJ,UAAU,iBAAiBsE,KAAK,SAAS,iBAAe,WACxD,iBAAe,0BAA0B,gBAAc,yBACvD,gBAAc,QAAQ,aAAW,qBACrC,wBAAMtE,UAAU,yBAEpB,uBAAKA,UAAU,2BAA2BuJ,GAAG,0BACzC,sBAAIvJ,UAAU,mCACTkJ,EAAU/P,KAAI,SAAAqQ,GAAI,OACf,sBAAIxJ,UAAU,WAAWzE,IAAKiO,EAAKD,IAC/B,gBAAC,EAAAF,KAAI,CAACpJ,MAAO,CAACwJ,MAAM,SAAWzJ,UAAU,WAAWsJ,GAAIE,EAAKA,MACxDA,EAAKE,MAET,QAOpB,EAObV,EAAOW,aAAe,CAClBV,UAAU,IAGd,Q,8BCOA,EAjDe,SAAH,OAAK1J,EAAQ,EAARA,SAAQ,OACrB,gBAAC,EAAAqK,YAAW,CACRC,MAAK,aAcLC,OAAQ,SAAAC,GAAI,OACR,gCACI,gBAAC,EAAM,CAACb,UAAWa,EAAKC,KAAKC,aAAaf,UAAWD,UAAWc,EAAKC,KAAKC,aAAaC,QACvF,4BACK3K,GAEL,gBAAC,IAAM,MACP,gBAAC,UAAS,CACNtB,UAAW,CACP0E,MAAM,OACNxB,OAAO,OACPgI,WAAW,YAEfjL,aAAc,CACVyE,MAAM,OACNxB,OAAO,QAEXnD,QAAQ,SACRG,UAAW,GACXC,KAAM,GACNN,SAAS,EACTO,eAAgB,KAEpB,gBAAC,IAAa,MACf,GAET,C","sources":["webpack://museologi.st/./node_modules/camelcase/index.js","webpack://museologi.st/./node_modules/react-back-to-top/dist/BackToTop.js","webpack://museologi.st/./node_modules/react-back-to-top/dist/utils.js","webpack://museologi.st/./node_modules/react-back-to-top/index.js","webpack://museologi.st/../src/image-utils.ts","webpack://museologi.st/../src/components/hooks.ts","webpack://museologi.st/../src/components/picture.tsx","webpack://museologi.st/../src/components/layout-wrapper.tsx","webpack://museologi.st/../src/components/placeholder.tsx","webpack://museologi.st/../src/components/main-image.tsx","webpack://museologi.st/../src/components/gatsby-image.browser.tsx","webpack://museologi.st/../src/components/gatsby-image.server.tsx","webpack://museologi.st/../src/components/static-image.server.tsx","webpack://museologi.st/../src/components/static-image.tsx","webpack://museologi.st/./src/components/nav.js","webpack://museologi.st/./src/components/layout.js"],"sourcesContent":["'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n  return string;\n};\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n  if (input.length === 0) {\n    return '';\n  }\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n  var hasUpperCase = input !== input.toLowerCase();\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _utils = require(\"./utils\");\nrequire(\"./BackToTop.css\");\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nvar BackToTop = /*#__PURE__*/\nfunction (_Component) {\n  _inherits(BackToTop, _Component);\n  function BackToTop(props) {\n    var _this;\n    _classCallCheck(this, BackToTop);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BackToTop).call(this, props));\n    _this.state = {\n      percent: 0,\n      current: 0\n    };\n    _this.animate = _this.props.animate || 'fade';\n    /**1、fade(default) 2、rotate 3、none */\n\n    _this.mainStyle = _this.props.mainStyle || {};\n    _this.percentStyle = _this.props.percentStyle || {};\n    _this.offsetTop = _this.props.offsetTop || 0;\n    _this.step = _this.props.step || 50;\n    _this.visiblePercent = _this.props.visiblePercent > 0 ? _this.props.visiblePercent : 1;\n    _this.isPercent = _this.props.isPercent === undefined ? true : _this.props.isPercent;\n    return _this;\n  }\n  _createClass(BackToTop, [{\n    key: \"scrollToTop\",\n    value: function scrollToTop() {\n      (0, _utils.ScrollToAnimate)(this.props.offsetTop, this.props.step, this.state.current);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      if (window) {\n        window.onscroll = function () {\n          _this2.setState({\n            percent: (0, _utils.getScrollPercent)(_this2.props.offsetTop),\n            current: (0, _utils.getScrollTop)()\n          }); // this.setState({ current: getScrollTop() });\n        };\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$props = this.props,\n        animate = _this$props.animate,\n        children = _this$props.children;\n      var visible = this.state.percent >= this.visiblePercent;\n      var animateHide = 'c-animate-hide';\n      var animateShow = 'c-animate-show';\n      if (animate !== 'fade' && animate !== 'rotate') {\n        if (animate !== 'none') {\n          animateHide = 'fade-hide';\n          animateShow = 'fade-show';\n        }\n      } else {\n        animateHide = animate + '-hide';\n        animateShow = animate + '-show';\n      }\n      console.log('asdasd', this.props, this.props.children);\n      return _react[\"default\"].createElement(\"div\", {\n        onClick: function onClick() {\n          return _this3.scrollToTop();\n        },\n        className: 'base-back-to-up ' + (visible ? animateShow : animateHide)\n      }, _react[\"default\"].createElement(\"div\", {\n        className: \"back-to-up-default\",\n        style: this.mainStyle\n      }, children ? Array.isArray(children) ? children.map(child, function (index) {\n        return _react[\"default\"].createElement(\"div\", {\n          key: index\n        }, child);\n      }) : children && _react[\"default\"].createElement(\"div\", null, children) : _react[\"default\"].createElement(\"div\", {\n        className: \"back-to-up-default-text\"\n      }, _react[\"default\"].createElement(\"span\", null, \"UP\")), _react[\"default\"].createElement(\"div\", {\n        className: 'to-up-percent' + (this.isPercent ? '' : ' percent-hide'),\n        style: this.percentStyle\n      }, this.state.percent + '%')));\n    }\n  }]);\n  return BackToTop;\n}(_react.Component);\nvar _default = BackToTop;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getScrollTop = getScrollTop;\nexports.ScrollToAnimate = ScrollToAnimate;\nexports.getScrollPercent = getScrollPercent;\n\n/**\r\n * 获取当前滚动条所在位置\r\n */\nfunction getScrollTop() {\n  var scrollTop = 0;\n  if (document.documentElement && document.documentElement.scrollTop) {\n    scrollTop = document.documentElement.scrollTop;\n  } else if (document.body) {\n    scrollTop = document.body.scrollTop;\n  }\n  return scrollTop;\n}\n/**\r\n * TODO\r\n * @param {*} position 滚动到何处\r\n * @param {*} step 步长\r\n * @param {*} current 滚动条当前位置\r\n */\n\nfunction ScrollToAnimate(position, step, current) {\n  var start = 0;\n  var timer = setInterval(function () {\n    if (current - start >= position) {\n      start += step;\n      if (current - start >= position) {\n        window.scrollTo(0, current - start);\n      } else {\n        window.scrollTo(0, position);\n      }\n    } else {\n      clearInterval(timer);\n    }\n  }, 0);\n}\n/**\r\n * 获取滚动条位置百分比\r\n */\n\nfunction getScrollPercent(offsetTop) {\n  var percent = 0;\n  if (offsetTop < getScrollTop()) {\n    percent = Math.round((getScrollTop() - offsetTop) / (document.body.scrollHeight - offsetTop - window.innerHeight) * 100);\n  }\n  return percent > 100 ? 100 : percent;\n}","module.exports = require(\"./dist/BackToTop\");\nexports.default = require(\"./dist/BackToTop\");","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\"\nimport {Link} from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nconst NavBar = ({siteTitle, menuLinks}) => (\n\n    <header style={{\n        background: \"#192036\",\n        marginBottom: \"3rem\",\n    }}\n    >\n\n        <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top\" style={{\n            background: \"#192036\",\n            marginBottom: \"1.45rem\",\n        }}>\n            <div className=\"container-fluid\">\n                <Link to=\"/\" className=\"navbar-brand text-white\">\n                    Daniel Pett - {siteTitle}\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                        {menuLinks.map(link => (\n                            <li className=\"nav-item\" key={link.id}>\n                                <Link style={{color: `white`}} className=\"nav-link\" to={link.link} >\n                                    {link.name}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n\n    </header>\n)\n\nNavBar.propTypes = {\n    siteTitle: PropTypes.string,\n}\n\nNavBar.defaultProps = {\n    siteTitle: ``,\n}\n\nexport default NavBar","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {StaticQuery, graphql} from \"gatsby\"\nimport NavBar from \"../components/nav\";\nimport Footer from \"../components/footer\"\nimport BackToTop from 'react-back-to-top';\nimport CookieConsent from '../components/cookieconsent';\n\nconst Layout = ({children}) => (\n    <StaticQuery\n        query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            menuLinks {\n                name\n                link\n                id\n            }\n          }\n        }\n      }\n    `}\n        render={data => (\n            <>\n                <NavBar menuLinks={data.site.siteMetadata.menuLinks} siteTitle={data.site.siteMetadata.title}/>\n                <main>\n                    {children}\n                </main>\n                <Footer/>\n                <BackToTop\n                    mainStyle={{\n                        width:'100%',\n                        height:'100%',\n                        background:'url(...)'\n                    }}\n                    percentStyle={{\n                        width:'100%',\n                        height:'100%',\n                    }}\n                    animate='rotate'\n                    offsetTop={20}\n                    step={50}\n                    percent={true}\n                    visiblePercent={50}\n                />\n                <CookieConsent/>\n            </>\n        )}\n    />\n)\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","defineProperty","value","_react","obj","__esModule","_typeof","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_utils","WeakMap","Symbol","iterator","constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_default","_Component","BackToTop","_this","instance","Constructor","_classCallCheck","this","state","percent","current","animate","mainStyle","percentStyle","offsetTop","step","visiblePercent","isPercent","undefined","protoProps","staticProps","subClass","superClass","create","_inherits","ScrollToAnimate","_this2","window","onscroll","setState","getScrollPercent","getScrollTop","_this3","_this$props","children","visible","animateHide","animateShow","console","log","createElement","onClick","scrollToTop","className","style","child","index","Component","scrollTop","document","documentElement","body","position","start","timer","setInterval","scrollTo","clearInterval","Math","round","scrollHeight","innerHeight","height","node","images","_node$images","fallback","_node$images$fallback","src","Boolean","gatsbyImageData","gatsbyImage","childImageSharp","_node$childImageSharp","getImage","_getImage","_getImage$images","_getImage$images$fall","format","isLoading","isLoaded","loading","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","top","left","bottom","right","transition","sources","fallbackImage","paddingTop","maxWidth","display","React","alt","role","a","Fragment","Sizer","t","srcSet","decoding","sizes","Image","media","type","propTypes","PropTypes","Picture","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","e","onError","as","preactClass","class","onStartLoad","onLoad","overflow","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","memo","warn","GatsbyImageHydrator","GatsbyImage","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__error","imageData","__imageData","StaticImage","NavBar","siteTitle","menuLinks","background","marginBottom","Link","to","id","link","color","name","defaultProps","StaticQuery","query","render","data","site","siteMetadata","title"],"sourceRoot":""}